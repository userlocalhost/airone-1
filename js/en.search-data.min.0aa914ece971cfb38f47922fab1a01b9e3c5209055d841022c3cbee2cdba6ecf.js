'use strict';(function(){const indexCfg={};indexCfg.doc={id:'id',field:['title','content'],store:['title','href','parent'],};const index=FlexSearch.create(indexCfg);window.geekdocSearchIndex=index;index.add({'id':0,'href':'/advanced/','title':"Advanced Topics",'parent':"AirOne",'content':""});index.add({'id':1,'href':'/release_note/CHANGELOG/','title':"Changelog",'parent':"Release Notes",'content':"in development Fixed  Fixed a bug not to change referral values when entity was edited  v2.4.0 Changed  Change implementation about editing Entity to disable to edit type of EntityAttr  v2.3.1 Fixed  Fixed a problem that date value won\u0026rsquo;t be shown at advanced search result  v2.3.0 Added  Added new AttributeType array group that could contain multiple Group referral in an Attribute value  v2.2.0 Added  Added a method in Entry to get an AttributeValue from Entry object with a small number of SQL  v2.1.0 Added  Added an API endpoint that returns change history of specific entry\u0026rsquo;s attribute. Added a feature to be able to confirm job of deleting entry from Job list view (#10)  v2.0.1 Fixed  Fixed a bug that mandatory parameter was able to be updated with empty value by specifying \u0026lsquo;- NOT SET -\u0026rsquo; value (#20)  v2.0.0 Added  Added a new optional authentication feature which is able to authenticate user with LDAP server (#6)  "});index.add({'id':2,'href':'/getting_started/installation/','title':"Installation and Configuration",'parent':"Getting Started",'content':"(TBD)\n"});index.add({'id':3,'href':'/posts/','title':"News",'parent':"AirOne",'content':""});index.add({'id':4,'href':'/release_note/','title':"Release Notes",'parent':"AirOne",'content':""});index.add({'id':5,'href':'/getting_started/tutorial/','title':"Tutorial",'parent':"Getting Started",'content':"(TBD)\n"});index.add({'id':6,'href':'/','title':"AirOne",'parent':'','content':" \nAirOne is a Web Application which is developed by the infrastructure division of DMM.com LLC on the purpose of managing information which is associated with on-premise equipments. This aims to be versatile and flexible for doing it.\nIn regard to the DMM.com, AirOne is responsible for managing all phisical (e.g. where a Server is equipped on), logical (e.g. which IPv4/v6 addresses are binded to), managemental (e.g. accounting details for equipments), operational (e.g. who and how uses it) information. And this meets demands of individual departs departments that handle each different information and have own work styles.\nWe had managed those information by using a DCIM (a.k.a. Data Center Information Management) system and many spreadsheets which are related to it until then. Basic physical and logical information was managed in the DCIM. And other spreadsheets had related managemental and operational information. Sadly, there were many different similer spreadsheets that have same information.\nWhen it comes to a equipments of Server, Data Center team has an interest in what kind of transceivers (SFP?, SFP+? or QSFP?) are installed on its ports. On the other hand, Contents Provider team is interested in storage devices on it. And Accounting team cares when they and how they were purchased. Please imagine a situation that individual teams try to handle those information by own spreadsheets. It\u0026rsquo;s nightmare to keep consistency of all those spreadsheets once its physical (this Server) would be disposed.\nThe original motivation of developing this software is solving this problem. If you are interested in more information about it, please check below page. (https://www.janog.gr.jp/meeting/janog45/en/program/infrabcp)\n"});index.add({'id':7,'href':'/getting_started/overview/','title':"AirOne Overview",'parent':"Getting Started",'content':"AirOne is an information management system with high flexibility of access control and high extensibility of data. This enables to manage information in any type of use-cases. This document describes these features.\nData model that meets with extensibility AirOne manages informaiton by using following two type of data-structure.\n Entity - has meta data (what kind of data it has and how). Entry - has actual data in conformity to an Entity which is associated with it.  This page shows an example how to manage information which has complex data-structure in this system as an example of an information management system of a library. This system manages book location information (where book is arranged in), book management information (what kind book is registered) and lending information (which book is lent to whom). The following an E-R diagram that descfribes the data-model of this system.\nYou can easily manage those complex information by making Entities on Air One as below.\nAnd by making Entries, you can register and retrieve all kind of data instances which are mentioned above.\nIn this way, user can handle any kind of information and information which is associated with other ones by using this simple data-structure (Entity and Entry) other than above use-case. For more information about this AirOne\u0026rsquo;s datastructure, please see Entity and Entry page.\n"});index.add({'id':8,'href':'/categories/','title':"Categories",'parent':"AirOne",'content':""});index.add({'id':9,'href':'/advanced/custom_view/','title':"CustomView",'parent':"Advanced Topics",'content':"(TBD)\n"});index.add({'id':10,'href':'/getting_started/','title':"Getting Started",'parent':"AirOne",'content':""});index.add({'id':11,'href':'/tags/','title':"Tags",'parent':"AirOne",'content':""});})();